[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "buildtest"
dynamic = ["version"]
readme = "README.rst"
requires-python = ">=3.8"
license = "MIT"
authors = [
  { name = "Shahzeb Siddiqui", email = "shahzebmsiddiqui@gmail.com" },
]

dependencies=[
   'distro',
   'jsonschema < 4.18',
   'lmodule',
   'PyYAML >= 5.12',
   'requests',
   'rich',
   'urllib3>=2.1.0',
    # both coverage and pytest required for running 'buildtest tutorial-examples'
   'coverage',
   'pytest',

    # required for running 'buildtest stylecheck'
   'black==24.3.0',
   'pyflakes',
   'isort',
   'archspec',
   'psutil',
]


[project.urls]
Documentation = "https://buildtest.readthedocs.io/en/latest/"
Source = "https://github.com/buildtesters/buildtest"

[tool.hatch.envs.default.scripts]
buildtest = "./bin/buildtest"

[tool.hatch.version]
path = "buildtest/__init__.py"

[project.optional-dependencies]
dev = [
    'pre-commit',
    'yamllint'
]
docs = [
    "docutils==0.18.1",
    "readthedocs-sphinx-search==0.3.2",
    "sphinx==7.1.2",
    "sphinx-design==0.5.0",
    "sphinx-argparse==0.4.0",
    "sphinx-autoapi==3.0.0",
    "sphinx-rtd-theme==2.0.0",
    "sphinxcontrib-programoutput==0.17",
    "sphinxext-remoteliteralinclude==0.4.0",
    "sphinx-copybutton==0.5.2"
]
[tool.black]
#required-version = '23.3.0'
#target-version = ['py38', 'py39', 'py310', 'py311']
skip_magic_trailing_comma = true
line-length = 88

[tool.isort]
profile = 'black'
src_paths = ["buildtest", "tests", "docs"]
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
split_on_trailing_comma = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vra -x --durations=20 -vv"
testpaths = ["tests"]
markers = [
    "schema: run schema tests",
    "utility: run test for utility methods used throughout codebase",
    "cli: run test for targetting buildtest command line features"
]

[tool.coverage.run]
parallel = true
concurrency = ["multiprocessing"]
branch = true
source = ["buildtest"]
omit = [
    'buildtest/main.py',
    'buildtest/defaults.py',
    'buildtest/__init__.py',
    'buildtest/cli/edit.py',
    'buildtest/cli/cd.py',
    'buildtest/tools/docs.py',
    'buildtest/tools/unittests.py',
    'buildtest/tools/tutorialexamples.py',
]

[tool.coverage.report]
ignore_errors = true
skip_empty = true
sort = "-cover"
precision = 2
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    'pragma: no cover',

    # Don't complain about missing debug-only code:
    'def __repr__',
    'if self\.debug',

    # Don't complain if tests don't hit defensive assertion code:
    'raise AssertionError',
    'raise NotImplementedError',

    # Don't complain if non-runnable code isn't run:
    'if 0:',
    'if False:',
    'if __name__ == .__main__.:',

    # buildtest methods that should not be coverred by regression tests
    'buildspec_find',
    'config_cmd',
    'report_cmd',
    'build_history',
]

[tool.coverage.html]
directory = "htmlcov"
